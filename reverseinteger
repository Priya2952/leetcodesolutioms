class Solution {
    public int reverse(int x) {
        int reversed = 0; // Initialize reversed to 0.

        while (x != 0) { // Loop until x becomes 0 (all digits processed).
            int digit = x % 10; // Extract the last digit of x.

            // Overflow protection:
            // If reversed > Integer.MAX_VALUE / 10, adding the next digit will overflow.
            if (reversed > Integer.MAX_VALUE / 10 || (reversed == Integer.MAX_VALUE / 10 && digit > 7)) {
                return 0; // Return 0 if positive overflow detected.
            }
            // If reversed < Integer.MIN_VALUE / 10, adding the next digit will underflow.
            if (reversed < Integer.MIN_VALUE / 10 || (reversed == Integer.MIN_VALUE / 10 && digit < -8)) {
                return 0; // Return 0 if negative overflow detected.
            }

            reversed = reversed * 10 + digit; // Append the last digit to reversed.
            x = x / 10; // Remove the last digit from x.
        }

        return reversed; // Return the reversed number if no overflow occurs.
    }
}
